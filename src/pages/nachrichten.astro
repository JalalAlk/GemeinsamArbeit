---
import Layout from '../layouts/Layout.astro';
---

<Layout title="Mein Nachrichten">
  <main>
    <h1>Meine Nachrichten</h1>
    <div id="button-container">
      <button id="search-button">Suchen</button>
      <button id="clear-button">Leeren</button>
    </div>
    <div id="search-container" class="hidden">
      <input type="text" id="search-input" placeholder="Suchbegriff eingeben" />
    </div>
    <div id="messages-container">
      <div id="messages"></div>
    </div>
    <button id="back-button">
      <svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" fill="currentColor" viewBox="0 0 24 24">
        <path d="M14 7l-5 5 5 5V7z"/>
      </svg>
      Zurück
    </button>
  </main>
</Layout>

<script type="module">
  document.addEventListener('DOMContentLoaded', function() {
    let messages = JSON.parse(localStorage.getItem('messages')) || [];
    const messagesContainer = document.getElementById('messages');
    const messagesContainerWrapper = document.getElementById('messages-container');
    const backButton = document.getElementById('back-button');
    const clearButton = document.getElementById('clear-button');
    const searchButton = document.getElementById('search-button');
    const searchContainer = document.getElementById('search-container');
    const searchInput = document.getElementById('search-input');

    // Funktion zum Rendern der Nachrichten
    function renderMessages(filteredMessages = messages) {
      if (!messagesContainer) return; // Sicherheitsüberprüfung

      messagesContainer.innerHTML = '';

      filteredMessages.forEach((msg, index) => {
        const messageEl = document.createElement('div');
        messageEl.classList.add('message');
        messageEl.innerHTML = `
          <p><strong>${msg.title}</strong></p>
          <p><strong>${msg.username || 'Anonym'}:</strong> ${msg.message}</p>
          <p><strong>Typ:</strong> ${msg.type}</p>
          <p><strong>Datum:</strong> ${msg.date}</p>
          <div class="replies">
            ${msg.replies ? msg.replies.map(reply => `<div class="reply"><strong>${reply.username || 'Anonym'}:</strong> ${reply.message}</div>`).join('') : ''}
          </div>
        `;

        messagesContainer.appendChild(messageEl);
      });

      // Scrollen zum neuesten Eintrag
      messagesContainerWrapper.scrollTop = messagesContainerWrapper.scrollHeight;

      // Speichern der Nachrichten in localStorage
      localStorage.setItem('messages', JSON.stringify(messages));
    }

    // Filter für die Suchfunktion
    function filterMessages(query) {
      return messages.filter(msg =>
        msg.title.toLowerCase().includes(query.toLowerCase()) ||
        msg.message.toLowerCase().includes(query.toLowerCase())
      );
    }

    // Such-Button Funktion
    if (searchButton) {
      searchButton.addEventListener('click', () => {
        searchContainer.classList.toggle('hidden');
      });
    }

    // Eingabefeld für die Suchfunktion
    if (searchInput) {
      searchInput.addEventListener('input', () => {
        const query = searchInput.value;
        const filteredMessages = filterMessages(query);
        renderMessages(filteredMessages);
      });
    }

    // Leeren-Button Funktion
    if (clearButton) {
      clearButton.addEventListener('click', () => {
        if (confirm('Sind Sie sicher, dass Sie alle Nachrichten löschen möchten?')) {
          localStorage.removeItem('messages');
          messages = [];
          renderMessages();
          alert('Alle Nachrichten wurden gelöscht!');
        }
      });
    }

    // Zurück-Button Funktion
    if (backButton) {
      backButton.addEventListener('click', () => {
        window.history.back();  // Gehe zur vorherigen Seite
      });
    }

    renderMessages();
  });
</script>

<style>
  :root {
    --background-main: #f4f6f9;
    --text-dark: #333;
    --button-background: #007BFF;
    --button-hover: #0056b3;
    --button-text: #fff;
    --main-background: #fff;
    --header-bg: #fff;
    --footer-bg: #f4f6f9;
    --message-background: #fff;
    --message-border: #ddd;
    --reply-background: #f4f4f4;
    --reply-border: #ddd;
    --delete-button-background: #dc3545;
    --delete-button-hover: #c82333;
    --reply-button-background: #28a745;
    --reply-button-hover: #218838;
    --back-button-background: #007BFF;
    --back-button-hover: #0056b3;
    --search-background: #f0f0f0;
    --search-border: #ddd;
  }

  body {
    background: var(--background-main);
    color: var(--text-dark);
    font-family: Arial, sans-serif;
    margin: 0;
    padding: 0;
  }

  header {
    background: var(--header-bg);
    padding: 1rem;
    color: var(--text-dark);
    text-align: center;
    box-shadow: 0 2px 4px rgb(0 0 0 / 10%);
  }

  header h1 {
    margin: 0;
    font-size: 24px;
  }

  nav a {
    color: var(--button-background);
    text-decoration: none;
    margin: 0 0.5rem;
  }

  main {
    padding: 1.5rem;
    width: 100%;
    max-width: 600px;
    color: rgb(11 11 11);
    font-size: 16px;
    line-height: 1.6;
    position: relative;
    background: var(--main-background);
    border-radius: 12px;
    box-shadow: 0 6px 12px rgb(0 0 0 / 10%);
    margin: 2rem auto;
  }

  #button-container {
    display: flex;
    justify-content: space-between;
    margin-bottom: 1rem;
  }

  #search-container {
    display: flex;
    justify-content: center;
    margin-bottom: 1rem;
  }

  #search-container.hidden {
    display: none;
  }

  #search-input {
    padding: 0.5rem;
    border-radius: 8px;
    border: 1px solid var(--search-border);
    background: var(--search-background);
    font-size: 16px;
    width: 100%;
    max-width: 300px;
  }

  #messages-container {
    border: none;
    background: var(--main-background);
    padding: 1rem;
    max-height: 500px;
    overflow-y: auto;
  }

  .message {
    margin-bottom: 1rem;
    padding: 1rem;
    border-radius: 8px;
    background: var(--message-background);
    border: 1px solid var(--message-border);
    box-shadow: 0 2px 4px rgb(0 0 0 / 10%);
  }

  .message:last-child {
    margin-bottom: 0;
  }

  .replies {
    margin-top: 1rem;
    padding-left: 1rem;
    border-left: 2px solid var(--message-border);
  }

  .reply {
    margin-top: 0.5rem;
    padding: 0.5rem;
    border-radius: 8px;
    background: var(--reply-background);
    border: 1px solid var(--reply-border);
  }

  .reply strong {
    color: var(--text-dark);
  }

  .reply-button,
  .delete-button,
  #search-button,
  #clear-button {
    padding: 0.75rem 1.5rem;
    border: none;
    border-radius: 8px;
    font-size: 1rem;
    cursor: pointer;
    transition: background 0.3s ease;
  }

  .reply-button {
    background: var(--reply-button-background);
    color: var(--button-text);
  }

  .reply-button:hover {
    background: var(--reply-button-hover);
  }

  .delete-button {
    background: var(--delete-button-background);
    color: var(--button-text);
  }

  .delete-button:hover {
    background: var(--delete-button-hover);
  }

  #search-button {
    background: var(--button-background);
    color: var(--button-text);
  }

  #search-button:hover {
    background: var(--button-hover);
  }

  #clear-button {
    background: var(--delete-button-background);
    color: var(--button-text);
  }

  #clear-button:hover {
    background: var(--delete-button-hover);
  }

  #back-button {
    position: absolute;
    bottom: 1rem;
    right: 1rem;
    display: flex;
    align-items: center;
    gap: 0.5rem;
    padding: 0.5rem 1rem;
    background: var(--back-button-background);
    color: var(--button-text);
    border: none;
    border-radius: 8px;
    box-shadow: 0 2px 4px rgb(0 0 0 / 10%);
    cursor: pointer;
    transition: background 0.3s ease, transform 0.3s ease;
  }

  #back-button:hover {
    background: var(--back-button-hover);
  }

  #back-button svg {
    fill: currentcolor;
  }
</style>
