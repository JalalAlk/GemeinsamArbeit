---
import Layout from '../layouts/Layout.astro';
---

<Layout title="Lernpartner anzeigen" description="Hier können Sie die gespeicherten Lernpartner-Nachrichten anzeigen, darauf antworten, suchen oder alle Nachrichten löschen.">
  <main>
    <div class="button-container">
      <button class="filter-button" data-type="Gruppe">Gruppe</button>
      <button class="filter-button" data-type="Einzelpartner">Einzelpartner</button>
      <button class="show-all-button">Alle anzeigen</button>
      <button id="search-button">Suchen</button>
      <button id="clear-button">Alle löschen</button>
    </div>
    <div id="search-container" class="hidden">
      <input type="text" id="search-input" placeholder="Suchbegriff eingeben..." />
    </div>
    <div id="responses-container">
      <ul id="responses"></ul>
    </div>
    
  </main>
</Layout>

<script type="module">
  document.addEventListener('DOMContentLoaded', function() {
    const responsesContainer = document.getElementById('responses');
    const filterButtons = document.querySelectorAll('.filter-button');
    const showAllButton = document.querySelector('.show-all-button');
    const searchButton = document.getElementById('search-button');
    const searchContainer = document.getElementById('search-container');
    const searchInput = document.getElementById('search-input');
    const clearButton = document.getElementById('clear-button');
    let messages = JSON.parse(localStorage.getItem('messages')) || [];
    let filteredMessages = [];

    filterButtons.forEach(button => {
      button.addEventListener('click', () => {
        const type = button.getAttribute('data-type');
        displayMessages(type);
      });
    });

    function filterMessages(query) {
      return messages.filter(msg =>
        msg.title.toLowerCase().includes(query.toLowerCase()) ||
        msg.message.toLowerCase().includes(query.toLowerCase())
      );
    }

    if (searchButton) {
      searchButton.addEventListener('click', () => {
        searchContainer.classList.toggle('hidden');
      });
    }

    if (searchInput) {
      searchInput.addEventListener('input', () => {
        const query = searchInput.value;
        const filteredMessages = filterMessages(query);
        renderMessages(filteredMessages);
      });
    }

    if (clearButton) {
      clearButton.addEventListener('click', () => {
        localStorage.removeItem('messages');
        messages = [];
        displayMessages();
        alert('Alle Nachrichten wurden gelöscht!');
      });
    }

    showAllButton.addEventListener('click', () => {
      displayMessages(); 
    });

    function displayMessages(type) {
      responsesContainer.innerHTML = '';

      if (!type) {
        
        filteredMessages = messages;
      } else {
        
        filteredMessages = messages.filter(msg => msg.type === type);
      }

      if (filteredMessages.length === 0) {
        responsesContainer.innerHTML = '<li class="no-messages">Keine Nachrichten vorhanden.</li>';
      } else {
        filteredMessages.forEach((msg) => {
          const messageItem = document.createElement('li');
          messageItem.className = 'message-item';

          const messageDiv = document.createElement('div');
          messageDiv.className = 'message';

          
          const messageTitle = document.createElement('h2');
          messageTitle.textContent = `Suche nach ${msg.partnerType}: ${msg.course}`;
          messageDiv.appendChild(messageTitle);

          const messageContent = document.createElement('p');
          messageContent.textContent = msg.message;
          messageDiv.appendChild(messageContent);

          const messageAuthor = document.createElement('p');
          messageAuthor.textContent = `Von: ${msg.name}`;
          messageDiv.appendChild(messageAuthor);

          const messageDate = document.createElement('span');
          messageDate.textContent = `Wann: ${msg.date}, Uhrzeit: ${msg.time}`;
          messageDiv.appendChild(messageDate);

          
          if (msg.groupSize) {
            const groupSize = document.createElement('p');
            groupSize.textContent = `Gruppe Größe: ${msg.groupSize}`;
            messageDiv.appendChild(groupSize);
          }

          
          if (msg.replies && msg.replies.length > 0) {
            const repliesDiv = document.createElement('div');
            repliesDiv.className = 'replies';
            msg.replies.forEach(reply => {
              const replyDiv = document.createElement('div');
              replyDiv.className = 'reply';
              replyDiv.innerHTML = `<strong>${reply.author} antwortet:</strong><p>${reply.text}</p>`;
              repliesDiv.appendChild(replyDiv);
            });
            messageDiv.appendChild(repliesDiv);
          }

          
          const buttonContainer = document.createElement('div');
          buttonContainer.className = 'button-container1';

          const replyButton = document.createElement('button');
          replyButton.textContent = 'Antworten';
          replyButton.className = 'reply-button';
          replyButton.onclick = function() {
            const replyAuthor = prompt('Ihr Name:');
            const replyText = prompt('Ihre Antwort:');
            if (replyAuthor && replyText) {
              if (!msg.replies) {
                msg.replies = [];
              }
              msg.replies.push({ text: replyText, author: replyAuthor });
              localStorage.setItem('messages', JSON.stringify(messages));
              displayMessages(type);  
              alert('Antwort wurde gespeichert!');
            }
          };
          buttonContainer.appendChild(replyButton);

          const interestedButton = document.createElement('button');
          interestedButton.className = 'interested-button';
          interestedButton.textContent = 'Interessiert';
          interestedButton.onclick = function() {
            if (interestedButton.classList.contains('interested-active')) {
              interestedButton.textContent = 'Interessiert';
              interestedButton.classList.remove('interested-active');
            } else {
              interestedButton.textContent = `Du bist Für " ${msg.partnerType}: ${msg.course}" interessiert`;
              interestedButton.classList.add('interested-active');
              alert('Sie haben Interesse an diesem Lernpartner gezeigt!');
            }
          };
          buttonContainer.appendChild(interestedButton);

          messageDiv.appendChild(buttonContainer);
          messageItem.appendChild(messageDiv);
          responsesContainer.appendChild(messageItem);
        });
      }
    }

    function renderMessages(messages) {
      responsesContainer.innerHTML = '';

      if (messages.length === 0) {
        responsesContainer.innerHTML = '<li class="no-messages">Keine Nachrichten vorhanden.</li>';
      } else {
        messages.forEach((msg) => {
          const messageItem = document.createElement('li');
          messageItem.className = 'message-item';

          const messageDiv = document.createElement('div');
          messageDiv.className = 'message';

         
          const messageTitle = document.createElement('h2');
          messageTitle.textContent = `Suche nach ${msg.partnerType}: ${msg.course}`;
          messageDiv.appendChild(messageTitle);

          const messageContent = document.createElement('p');
          messageContent.textContent = msg.message;
          messageDiv.appendChild(messageContent);

          const messageAuthor = document.createElement('p');
          messageAuthor.textContent = `Von: ${msg.name}`;
          messageDiv.appendChild(messageAuthor);

          const messageDate = document.createElement('span');
          messageDate.textContent = `Wann: ${msg.date}, Uhrzeit: ${msg.time}`;
          messageDiv.appendChild(messageDate);

          
          if (msg.groupSize) {
            const groupSize = document.createElement('p');
            groupSize.textContent = `Anzahl der Personen in der Gruppe: ${msg.groupSize}`;
            messageDiv.appendChild(groupSize);
          }

          
          if (msg.replies && msg.replies.length > 0) {
            const repliesDiv = document.createElement('div');
            repliesDiv.className = 'replies';
            msg.replies.forEach(reply => {
              const replyDiv = document.createElement('div');
              replyDiv.className = 'reply';
              replyDiv.innerHTML = `<strong>${reply.author} antwortet:</strong><p>${reply.text}</p>`;
              repliesDiv.appendChild(replyDiv);
            });
            messageDiv.appendChild(repliesDiv);
          }

          
          const buttonContainer = document.createElement('div');
          buttonContainer.className = 'button-container1';

          const replyButton = document.createElement('button');
          replyButton.textContent = 'Antworten';
          replyButton.className = 'reply-button';
          replyButton.onclick = function() {
            const replyAuthor = prompt('Ihr Name:');
            const replyText = prompt('Ihre Antwort:');
            if (replyAuthor && replyText) {
              if (!msg.replies) {
                msg.replies = [];
              }
              msg.replies.push({ text: replyText, author: replyAuthor });
              localStorage.setItem('messages', JSON.stringify(messages));
              renderMessages(messages);
              alert('Antwort wurde gespeichert!');
            }
          };
          buttonContainer.appendChild(replyButton);

          const interestedButton = document.createElement('button');
          interestedButton.className = 'interested-button';
          interestedButton.textContent = 'Interessiert';
          interestedButton.onclick = function() {
            alert('Sie haben Interesse an diesem Lernpartner gezeigt!');
          };
          buttonContainer.appendChild(interestedButton);

          messageDiv.appendChild(buttonContainer);
          messageItem.appendChild(messageDiv);
          responsesContainer.appendChild(messageItem);
        });
      }
    }

    
    displayMessages();
  });
</script>

<style>

  body {
    background: var(--background-main);
    color: var(--text-dark);
    font-family: Arial, sans-serif;
    margin: 0;
    padding: 0;
  }

  .button-container {
    display: flex;
    justify-content: center;
    margin-bottom: 1rem;
    gap: 1rem;
  }

  .filter-button, .show-all-button, #search-button, #clear-button {
    display: inline-block;
    padding: 0.75rem 1.25rem;
    color: #fff;
    text-decoration: none;
    background-color: #0064B2;
    border-radius: 8px;
    transition: background 0.3s ease, transform 0.3s ease;
  }

  .filter-button:hover, .show-all-button:hover, #search-button:hover, #clear-button:hover {
    background: #00246B;
  }

  #search-container {
    text-align: center;
    margin-bottom: 1rem;
  }

  #search-input {
    margin-right: 0;
    background-color: white;
    padding: 0.5rem;
    border-radius: 8px;
    border: 3px solid #00246B;
    color: black;
    width: 100%;
    max-width: 575px;
  }

  #search-container.hidden {
    display: none;
  }

  .message-item {
    border-bottom: 1px solid rgb(0 0 0 / 10%);
    padding: 0.5rem;
  }

  .message-item:last-child {
    border-bottom: none;
  }

  .message {
    padding: 1rem;
    border-radius: 8px;
    background: #fff;
    margin-bottom: 0.5rem;
  }

  .replies {
    margin-top: 0.5rem;
  }

  .reply {
    padding: 0.5rem;
    border: 1px solid #ddd;
    border-radius: 8px;
    background: #f0f0f0;
    margin-top: 0.5rem;
  }

  .button-container1 {
    display: flex;
    justify-content: space-around;
    margin-top: 0.5rem;
  }

  .reply-button, .interested-button {
    padding: 0.5rem 1rem;
    background-color: #00246B;
    color: #0064B2;
    border: none;
    border-radius: 8px;
    cursor: pointer;
    transition: background 0.3s ease, transform 0.3s ease;
  }

  .reply-button:hover, .interested-button:hover {
    background: #1287e0;
  }
</style>
