---
import Layout from '../layouts/Layout.astro';
---

<Layout title="Lernpartner suchen" description="Suchen Sie hier nach Lernpartnern f체r Ihre Kurse.">
  <main>
    <h1>Lernpartner Suchen</h1>
    <form id="lernpartner-form">
      <label for="lernpartner-name">Ihr Name:</label>
      <input type="text" id="lernpartner-name" placeholder="Geben Sie Ihren Namen ein" required />

      <label for="lernpartner-type">Art der Partnerschaft:</label>
      <select id="lernpartner-type" required>
        <option value="" disabled selected>Bitte w채hlen Sie eine Option</option>
        <option value="Einzelpartner">Einzelpartner</option>
        <option value="Gruppe">Gruppe</option>
      </select>

      <div id="personen-auswahl" style="display: none;">
        <label for="anzahl-personen">Anzahl der Personen:</label>
        <select id="anzahl-personen" required>
          <option value="" disabled selected>Bitte w채hlen Sie</option>
          <option value="3">3 Personen</option>
          <option value="4">4 Personen</option>
          <option value="5">5 Personen</option>
          <option value="6">6 Personen</option>
          <option value="7">7 Personen</option>
          <option value="8">8 Personen</option>
          <option value="9">9 Personen</option>
          <option value="10">10 Personen</option>
        </select>
      </div>

      <label for="lernpartner-course">Name des Kurses:</label>
      <input type="text" id="lernpartner-course" placeholder="Beispiel: Mathematik 3" required />

      <label for="lernpartner-message">Ihre Nachricht:</label>
      <textarea id="lernpartner-message" rows="5" placeholder="Nachricht.." required></textarea>

      <div class="checkbox-container">
        <input type="checkbox" id="disable-time-checkbox" />
        <label for="disable-time-checkbox">Zeit und Datum deaktivieren</label>
      </div>

      <div class="date-time-wrapper">
        <div class="date-time-item">
          <label for="lernpartner-date">Datum:</label>
          <input type="date" id="lernpartner-date" required />
        </div>

        <div class="date-time-item">
          <label for="lernpartner-time">Zeit:</label>
          <input type="time" id="lernpartner-time" required />
        </div>
      </div>

      <button type="submit">Senden</button>
    </form>
  </main>
</Layout>


<script type="module">
  document.addEventListener('DOMContentLoaded', () => {
  const lernpartnerForm = document.getElementById('lernpartner-form');
  const lernpartnerNameInput = document.getElementById('lernpartner-name');
  const lernpartnerTypeSelect = document.getElementById('lernpartner-type');
  const personenAuswahlDiv = document.getElementById('personen-auswahl');
  const anzahlPersonenSelect = document.getElementById('anzahl-personen');
  const lernpartnerCourseInput = document.getElementById('lernpartner-course');
  const lernpartnerMessageInput = document.getElementById('lernpartner-message');
  const lernpartnerDateInput = document.getElementById('lernpartner-date');
  const lernpartnerTimeInput = document.getElementById('lernpartner-time');
  const disableTimeCheckbox = document.getElementById('disable-time-checkbox');


  lernpartnerTypeSelect.addEventListener('change', () => {
    const selectedOption = lernpartnerTypeSelect.value;

    if (selectedOption === 'Gruppe') {
      personenAuswahlDiv.style.display = 'block';
      anzahlPersonenSelect.setAttribute('required', 'true');
    } else {
      personenAuswahlDiv.style.display = 'none';
      anzahlPersonenSelect.removeAttribute('required');
    }
  });
  
  
  const today = new Date().toISOString().split('T')[0];
  lernpartnerDateInput.value = today;
  lernpartnerDateInput.min = today;

  function updateMinTime() {
    const selectedDate = lernpartnerDateInput.value;
    const currentDate = new Date().toISOString().split('T')[0];

    if (selectedDate === currentDate) {
      const now = new Date();
      const minTime = now.toLocaleTimeString('it-IT', { hour: '2-digit', minute: '2-digit' });
      lernpartnerTimeInput.min = minTime;
    } else {
      lernpartnerTimeInput.min = "00:00";
    }
  }

  function toggleDateTimeInputs(disabled) {
    lernpartnerDateInput.disabled = disabled;
    lernpartnerTimeInput.disabled = disabled;
  }

  disableTimeCheckbox.addEventListener('change', () => {
    const disabled = disableTimeCheckbox.checked;
    toggleDateTimeInputs(disabled);

    if (disabled) {
      lernpartnerDateInput.value = '';
      lernpartnerTimeInput.value = '';
    } else {
      lernpartnerDateInput.value = today;
      const now = new Date();
      const currentTime = now.toLocaleTimeString('it-IT', { hour: '2-digit', minute: '2-digit' });
      lernpartnerTimeInput.value = currentTime;
      updateMinTime();
    }
  });

  lernpartnerDateInput.addEventListener('change', updateMinTime);

   const savedTime = localStorage.getItem('savedTime');
    if (savedTime) {
      lernpartnerTimeInput.value = savedTime;
    }

  const now = new Date();
  const currentTime = now.toLocaleTimeString('it-IT', { hour: '2-digit', minute: '2-digit' });
  lernpartnerTimeInput.value = currentTime;
  updateMinTime();

  lernpartnerForm.addEventListener('submit', (event) => {
    event.preventDefault();
    const name = lernpartnerNameInput.value.trim();
    const partnerType = lernpartnerTypeSelect.value;
    const course = lernpartnerCourseInput.value.trim();
    const message = lernpartnerMessageInput.value.trim();
    const date = disableTimeCheckbox.checked ? '' : lernpartnerDateInput.value;
    const time = disableTimeCheckbox.checked ? '' : lernpartnerTimeInput.value;
    const groupSize = anzahlPersonenSelect.value;


    if (!name || !partnerType || !course || !message || (!date && !disableTimeCheckbox.checked)) {
      alert('Bitte f체llen Sie alle erforderlichen Felder aus.');
      return;
    }

    let title = `${partnerType}: ${course}`;
    let lernpartnerMessages = JSON.parse(localStorage.getItem('messages') || '[]');
    lernpartnerMessages.push({
      id: Date.now(),
      type: partnerType,
      title,
      message,
      name,
      date: disableTimeCheckbox.checked ? 'Nicht angegeben' : date,
      time: disableTimeCheckbox.checked ? 'Nicht angegeben' : time,
      course,
      partnerType,
      groupSize, 
      replies: []
    });
    localStorage.setItem('messages', JSON.stringify(lernpartnerMessages));

    lernpartnerForm.reset();
    lernpartnerDateInput.value = today;
    lernpartnerTimeInput.value = currentTime;
    updateMinTime();

    location.reload();

    alert('Gesuch gesendet!');
  });
});

</script>

<style>
  body {
    background: var(--background-main);
    color: var(--text-dark);
    font-family: Arial, sans-serif;
    margin: 0;
    padding: 0;
  }

  .checkbox-container {
  display: flex;
  align-items: center;
}

.checkbox-container input[type="checkbox"] {
  margin-right: 0.5rem;
}


  main {
    margin: auto;
    padding: 2rem;
    width: 100%;
    max-width: 600px;
    background: #fff;
    border-radius: 12px;
    color: #0064B2;
    text-align: center;
    box-shadow: 0 4px 12px rgb(0 0 0 / 15%);
    font-family: Arial, sans-serif;
  }

  h1 {
    margin-bottom: 2rem;
    font-size: 28px;
    font-weight: bold;
    color: #0064B2;
    border-bottom: 2px solid #0064B2;
    padding-bottom: 1rem;
  }

  form {
    display: flex;
    flex-direction: column;
    gap: 1rem;
  }

  label {
    font-size: 16px;
    color: #555;
    margin-top: 0.1rem;
    margin-bottom: 0.1rem;
    text-align: left;
  }

  input[type="text"], select, textarea{
    padding: 1rem;
    border-radius: 10px;
    border: 2px solid #ddd;
    background: #f9f9f9;
    color: #333;
    font-size: 16px;
    transition: border-color 0.3s ease, box-shadow 0.3s ease;
  }

  input[type="date"], input[type="time"]{
    padding: 0.8rem 5.2rem;
    border-radius: 10px;
    border: 2px solid #ddd;
    background: #f9f9f9;
    color: #333;
    font-size: 16px;
    transition: border-color 0.3s ease, box-shadow 0.3s ease;
  }

  .input[type="text"], .input[type="date"], .input[type="time"], .select {
    height: 2.5rem;
  }

  .textarea {
    resize: none;
  }

  input:focus, select:focus, textarea:focus {
    border-color: #0064B2;
    outline: none;
  }

  .date-time-wrapper {
    display: flex;
    gap: 1rem;
    justify-content: space-between;
    margin-right: 170px;
  }

  .date-time-item {
    flex: 1;
  }

  button {
    padding: 0.8rem 0.1rem;
    background-color: #0064B2;
    color: white;
    border: none;
    border-radius: 10px;
    cursor: pointer;
    transition: background 0.3s ease, transform 0.3s ease;
    font-size: 16px;
    font-weight: bold;
  }

  button:hover {
    background: #1287e0;
    transform: translateY(-2px);
  }

  a.button-lernpartner {
    display: inline-block;
    padding: 0.5rem 0.1rem;
    margin-top: 1rem;
    background-color: #0064B2;
    color: white;
    border: none;
    border-radius: 10px;
    cursor: pointer;
    transition: background 0.3s ease, transform 0.3s ease;
    text-decoration: none;
    font-size: 16px;
    font-weight: bold;
  }

  a.button-lernpartner:hover {
    background: #1287e0;
    transform: translateY(-2px);
  }
</style>